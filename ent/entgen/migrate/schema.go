// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuthclientColumns holds the columns for the "authclient" table.
	AuthclientColumns = []*schema.Column{
		{Name: "client_uuid", Type: field.TypeString, Unique: true},
		{Name: "Client_secret", Type: field.TypeString},
		{Name: "Grant_type", Type: field.TypeString, Nullable: true},
		{Name: "CreatedAt", Type: field.TypeTime},
		{Name: "UpdatedAt", Type: field.TypeTime},
		{Name: "DeletedAt", Type: field.TypeTime, Nullable: true},
		{Name: "domain", Type: field.TypeString, Nullable: true},
		{Name: "public", Type: field.TypeBool, Default: true},
		{Name: "UserAgent", Type: field.TypeString, Default: "test"},
		{Name: "redirect_uri", Type: field.TypeString, Nullable: true},
		{Name: "CreatedBy", Type: field.TypeString, Default: "test"},
		{Name: "UpdatedBy", Type: field.TypeString, Default: "test"},
		{Name: "DeletedBy", Type: field.TypeString, Nullable: true},
	}
	// AuthclientTable holds the schema information for the "authclient" table.
	AuthclientTable = &schema.Table{
		Name:       "authclient",
		Columns:    AuthclientColumns,
		PrimaryKey: []*schema.Column{AuthclientColumns[0]},
	}
	// AuthtokenColumns holds the columns for the "authtoken" table.
	AuthtokenColumns = []*schema.Column{
		{Name: "id_uuid", Type: field.TypeString, Unique: true},
		{Name: "auth_uuid", Type: field.TypeString},
		{Name: "auth_xref", Type: field.TypeString},
		{Name: "accesstoken", Type: field.TypeString},
		{Name: "accesstokencreatedat", Type: field.TypeTime},
		{Name: "accesstokenexpiresin", Type: field.TypeInt},
		{Name: "refreshtoken", Type: field.TypeString},
		{Name: "refreshtokencreatedat", Type: field.TypeTime},
		{Name: "refreshtokenexpiresin", Type: field.TypeInt},
		{Name: "createdat", Type: field.TypeTime},
		{Name: "updatedat", Type: field.TypeTime},
		{Name: "deletedat", Type: field.TypeTime, Nullable: true},
		{Name: "ip_address", Type: field.TypeString, Default: "::1"},
		{Name: "useragent", Type: field.TypeString, Default: "test"},
		{Name: "createdby", Type: field.TypeString, Default: "test"},
		{Name: "updatedby", Type: field.TypeString, Default: "test"},
		{Name: "deletedby", Type: field.TypeString, Nullable: true},
		{Name: "code", Type: field.TypeString},
		{Name: "codecreatedat", Type: field.TypeTime},
		{Name: "codeexpiresin", Type: field.TypeInt},
		{Name: "codechallenge", Type: field.TypeString, Nullable: true},
		{Name: "redirect_uri", Type: field.TypeString, Nullable: true},
		{Name: "scope", Type: field.TypeString, Default: "test"},
		{Name: "clientid", Type: field.TypeString, Nullable: true},
		{Name: "user_ulid", Type: field.TypeString, Nullable: true},
	}
	// AuthtokenTable holds the schema information for the "authtoken" table.
	AuthtokenTable = &schema.Table{
		Name:       "authtoken",
		Columns:    AuthtokenColumns,
		PrimaryKey: []*schema.Column{AuthtokenColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "authtoken_authclient_ClientToken",
				Columns:    []*schema.Column{AuthtokenColumns[23]},
				RefColumns: []*schema.Column{AuthclientColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "authtoken_tbl_users_UserToken",
				Columns:    []*schema.Column{AuthtokenColumns[24]},
				RefColumns: []*schema.Column{TblUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TblCartColumns holds the columns for the "Tbl_Cart" table.
	TblCartColumns = []*schema.Column{
		{Name: "Id_uuid", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"cart", "canceled", "brought"}, Default: "cart"},
		{Name: "Created_at", Type: field.TypeTime},
		{Name: "Updated_at", Type: field.TypeTime},
		{Name: "Deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "ProductId", Type: field.TypeString, Nullable: true},
		{Name: "UserId", Type: field.TypeString, Nullable: true},
	}
	// TblCartTable holds the schema information for the "Tbl_Cart" table.
	TblCartTable = &schema.Table{
		Name:       "Tbl_Cart",
		Columns:    TblCartColumns,
		PrimaryKey: []*schema.Column{TblCartColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Tbl_Cart_Tbl_Inventory_InventoryCart",
				Columns:    []*schema.Column{TblCartColumns[5]},
				RefColumns: []*schema.Column{TblInventoryColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Tbl_Cart_tbl_users_UserCart",
				Columns:    []*schema.Column{TblCartColumns[6]},
				RefColumns: []*schema.Column{TblUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TblInventoryColumns holds the columns for the "Tbl_Inventory" table.
	TblInventoryColumns = []*schema.Column{
		{Name: "Id_uuid", Type: field.TypeString},
		{Name: "Name", Type: field.TypeString},
		{Name: "Description", Type: field.TypeString},
		{Name: "ImageLink", Type: field.TypeString},
		{Name: "Price", Type: field.TypeFloat32},
		{Name: "Is_Active", Type: field.TypeBool, Default: true},
		{Name: "Created_at", Type: field.TypeTime},
		{Name: "Updated_at", Type: field.TypeTime},
		{Name: "Deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// TblInventoryTable holds the schema information for the "Tbl_Inventory" table.
	TblInventoryTable = &schema.Table{
		Name:       "Tbl_Inventory",
		Columns:    TblInventoryColumns,
		PrimaryKey: []*schema.Column{TblInventoryColumns[0]},
	}
	// TblInventoryTagColumns holds the columns for the "Tbl_Inventory_Tag" table.
	TblInventoryTagColumns = []*schema.Column{
		{Name: "Id_uuid", Type: field.TypeString},
		{Name: "InventoryId", Type: field.TypeString, Nullable: true},
		{Name: "TagId", Type: field.TypeString, Nullable: true},
		{Name: "Created_at", Type: field.TypeTime},
		{Name: "Updated_at", Type: field.TypeTime},
		{Name: "Deleted_at", Type: field.TypeTime},
		{Name: "tbl_inventory_inventory", Type: field.TypeString, Nullable: true},
		{Name: "tbl_tag_tag", Type: field.TypeString, Nullable: true},
	}
	// TblInventoryTagTable holds the schema information for the "Tbl_Inventory_Tag" table.
	TblInventoryTagTable = &schema.Table{
		Name:       "Tbl_Inventory_Tag",
		Columns:    TblInventoryTagColumns,
		PrimaryKey: []*schema.Column{TblInventoryTagColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Tbl_Inventory_Tag_Tbl_Inventory_inventory",
				Columns:    []*schema.Column{TblInventoryTagColumns[6]},
				RefColumns: []*schema.Column{TblInventoryColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Tbl_Inventory_Tag_Tbl_Tag_tag",
				Columns:    []*schema.Column{TblInventoryTagColumns[7]},
				RefColumns: []*schema.Column{TblTagColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TblPaymentColumns holds the columns for the "Tbl_Payment" table.
	TblPaymentColumns = []*schema.Column{
		{Name: "Id_uuid", Type: field.TypeString},
		{Name: "Status", Type: field.TypeString, Default: "created"},
		{Name: "RazorpayOrderId", Type: field.TypeString},
		{Name: "Amount", Type: field.TypeFloat32},
		{Name: "Created_at", Type: field.TypeTime},
		{Name: "Updated_at", Type: field.TypeTime},
		{Name: "Deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "InventoryId", Type: field.TypeString, Nullable: true},
		{Name: "UserId", Type: field.TypeString, Nullable: true},
	}
	// TblPaymentTable holds the schema information for the "Tbl_Payment" table.
	TblPaymentTable = &schema.Table{
		Name:       "Tbl_Payment",
		Columns:    TblPaymentColumns,
		PrimaryKey: []*schema.Column{TblPaymentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Tbl_Payment_Tbl_Inventory_InventoryPayment",
				Columns:    []*schema.Column{TblPaymentColumns[7]},
				RefColumns: []*schema.Column{TblInventoryColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Tbl_Payment_tbl_users_UserPayment",
				Columns:    []*schema.Column{TblPaymentColumns[8]},
				RefColumns: []*schema.Column{TblUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TblTagColumns holds the columns for the "Tbl_Tag" table.
	TblTagColumns = []*schema.Column{
		{Name: "Id_uuid", Type: field.TypeString},
		{Name: "Name", Type: field.TypeString},
		{Name: "Description", Type: field.TypeString},
		{Name: "Is_Active", Type: field.TypeBool, Default: true},
		{Name: "Created_at", Type: field.TypeTime},
		{Name: "Updated_at", Type: field.TypeTime},
		{Name: "Deleted_at", Type: field.TypeTime, Nullable: true},
	}
	// TblTagTable holds the schema information for the "Tbl_Tag" table.
	TblTagTable = &schema.Table{
		Name:       "Tbl_Tag",
		Columns:    TblTagColumns,
		PrimaryKey: []*schema.Column{TblTagColumns[0]},
	}
	// TblUsersColumns holds the columns for the "tbl_users" table.
	TblUsersColumns = []*schema.Column{
		{Name: "id_uuid", Type: field.TypeString, Unique: true},
		{Name: "firstname", Type: field.TypeString, Size: 32},
		{Name: "lastname", Type: field.TypeString, Size: 32},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "birth_date", Type: field.TypeTime, Nullable: true},
		{Name: "password", Type: field.TypeString, Size: 255},
		{Name: "is_active", Type: field.TypeInt, Default: 1},
		{Name: "zip_code", Type: field.TypeInt, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "ip_address", Type: field.TypeString, Nullable: true, Size: 40},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"user", "admin"}, Default: "user"},
	}
	// TblUsersTable holds the schema information for the "tbl_users" table.
	TblUsersTable = &schema.Table{
		Name:       "tbl_users",
		Columns:    TblUsersColumns,
		PrimaryKey: []*schema.Column{TblUsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuthclientTable,
		AuthtokenTable,
		TblCartTable,
		TblInventoryTable,
		TblInventoryTagTable,
		TblPaymentTable,
		TblTagTable,
		TblUsersTable,
	}
)

func init() {
	AuthclientTable.Annotation = &entsql.Annotation{
		Table: "authclient",
	}
	AuthtokenTable.ForeignKeys[0].RefTable = AuthclientTable
	AuthtokenTable.ForeignKeys[1].RefTable = TblUsersTable
	AuthtokenTable.Annotation = &entsql.Annotation{
		Table: "authtoken",
	}
	TblCartTable.ForeignKeys[0].RefTable = TblInventoryTable
	TblCartTable.ForeignKeys[1].RefTable = TblUsersTable
	TblCartTable.Annotation = &entsql.Annotation{
		Table: "Tbl_Cart",
	}
	TblInventoryTable.Annotation = &entsql.Annotation{
		Table: "Tbl_Inventory",
	}
	TblInventoryTagTable.ForeignKeys[0].RefTable = TblInventoryTable
	TblInventoryTagTable.ForeignKeys[1].RefTable = TblTagTable
	TblInventoryTagTable.Annotation = &entsql.Annotation{
		Table: "Tbl_Inventory_Tag",
	}
	TblPaymentTable.ForeignKeys[0].RefTable = TblInventoryTable
	TblPaymentTable.ForeignKeys[1].RefTable = TblUsersTable
	TblPaymentTable.Annotation = &entsql.Annotation{
		Table: "Tbl_Payment",
	}
	TblTagTable.Annotation = &entsql.Annotation{
		Table: "Tbl_Tag",
	}
	TblUsersTable.Annotation = &entsql.Annotation{
		Table: "tbl_users",
	}
}
