// Code generated by ent, DO NOT EDIT.

package tblauthclient

import (
	"inventory/ent/entgen/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContainsFold(FieldID, id))
}

// ClientSecret applies equality check predicate on the "Client_secret" field. It's identical to ClientSecretEQ.
func ClientSecret(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldClientSecret, v))
}

// GrantType applies equality check predicate on the "Grant_type" field. It's identical to GrantTypeEQ.
func GrantType(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldGrantType, v))
}

// CreatedAt applies equality check predicate on the "CreatedAt" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "UpdatedAt" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "DeletedAt" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldDeletedAt, v))
}

// Domain applies equality check predicate on the "domain" field. It's identical to DomainEQ.
func Domain(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldDomain, v))
}

// Public applies equality check predicate on the "public" field. It's identical to PublicEQ.
func Public(v bool) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldPublic, v))
}

// UserAgent applies equality check predicate on the "UserAgent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldUserAgent, v))
}

// RedirectURI applies equality check predicate on the "redirect_uri" field. It's identical to RedirectURIEQ.
func RedirectURI(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldRedirectURI, v))
}

// CreatedBy applies equality check predicate on the "CreatedBy" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldCreatedBy, v))
}

// UpdatedBy applies equality check predicate on the "UpdatedBy" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldUpdatedBy, v))
}

// DeletedBy applies equality check predicate on the "DeletedBy" field. It's identical to DeletedByEQ.
func DeletedBy(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldDeletedBy, v))
}

// ClientSecretEQ applies the EQ predicate on the "Client_secret" field.
func ClientSecretEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldClientSecret, v))
}

// ClientSecretNEQ applies the NEQ predicate on the "Client_secret" field.
func ClientSecretNEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldClientSecret, v))
}

// ClientSecretIn applies the In predicate on the "Client_secret" field.
func ClientSecretIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldClientSecret, vs...))
}

// ClientSecretNotIn applies the NotIn predicate on the "Client_secret" field.
func ClientSecretNotIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldClientSecret, vs...))
}

// ClientSecretGT applies the GT predicate on the "Client_secret" field.
func ClientSecretGT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldClientSecret, v))
}

// ClientSecretGTE applies the GTE predicate on the "Client_secret" field.
func ClientSecretGTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldClientSecret, v))
}

// ClientSecretLT applies the LT predicate on the "Client_secret" field.
func ClientSecretLT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldClientSecret, v))
}

// ClientSecretLTE applies the LTE predicate on the "Client_secret" field.
func ClientSecretLTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldClientSecret, v))
}

// ClientSecretContains applies the Contains predicate on the "Client_secret" field.
func ClientSecretContains(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContains(FieldClientSecret, v))
}

// ClientSecretHasPrefix applies the HasPrefix predicate on the "Client_secret" field.
func ClientSecretHasPrefix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasPrefix(FieldClientSecret, v))
}

// ClientSecretHasSuffix applies the HasSuffix predicate on the "Client_secret" field.
func ClientSecretHasSuffix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasSuffix(FieldClientSecret, v))
}

// ClientSecretEqualFold applies the EqualFold predicate on the "Client_secret" field.
func ClientSecretEqualFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEqualFold(FieldClientSecret, v))
}

// ClientSecretContainsFold applies the ContainsFold predicate on the "Client_secret" field.
func ClientSecretContainsFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContainsFold(FieldClientSecret, v))
}

// GrantTypeEQ applies the EQ predicate on the "Grant_type" field.
func GrantTypeEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldGrantType, v))
}

// GrantTypeNEQ applies the NEQ predicate on the "Grant_type" field.
func GrantTypeNEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldGrantType, v))
}

// GrantTypeIn applies the In predicate on the "Grant_type" field.
func GrantTypeIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldGrantType, vs...))
}

// GrantTypeNotIn applies the NotIn predicate on the "Grant_type" field.
func GrantTypeNotIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldGrantType, vs...))
}

// GrantTypeGT applies the GT predicate on the "Grant_type" field.
func GrantTypeGT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldGrantType, v))
}

// GrantTypeGTE applies the GTE predicate on the "Grant_type" field.
func GrantTypeGTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldGrantType, v))
}

// GrantTypeLT applies the LT predicate on the "Grant_type" field.
func GrantTypeLT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldGrantType, v))
}

// GrantTypeLTE applies the LTE predicate on the "Grant_type" field.
func GrantTypeLTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldGrantType, v))
}

// GrantTypeContains applies the Contains predicate on the "Grant_type" field.
func GrantTypeContains(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContains(FieldGrantType, v))
}

// GrantTypeHasPrefix applies the HasPrefix predicate on the "Grant_type" field.
func GrantTypeHasPrefix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasPrefix(FieldGrantType, v))
}

// GrantTypeHasSuffix applies the HasSuffix predicate on the "Grant_type" field.
func GrantTypeHasSuffix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasSuffix(FieldGrantType, v))
}

// GrantTypeIsNil applies the IsNil predicate on the "Grant_type" field.
func GrantTypeIsNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIsNull(FieldGrantType))
}

// GrantTypeNotNil applies the NotNil predicate on the "Grant_type" field.
func GrantTypeNotNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotNull(FieldGrantType))
}

// GrantTypeEqualFold applies the EqualFold predicate on the "Grant_type" field.
func GrantTypeEqualFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEqualFold(FieldGrantType, v))
}

// GrantTypeContainsFold applies the ContainsFold predicate on the "Grant_type" field.
func GrantTypeContainsFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContainsFold(FieldGrantType, v))
}

// CreatedAtEQ applies the EQ predicate on the "CreatedAt" field.
func CreatedAtEQ(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "CreatedAt" field.
func CreatedAtNEQ(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "CreatedAt" field.
func CreatedAtIn(vs ...time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "CreatedAt" field.
func CreatedAtNotIn(vs ...time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "CreatedAt" field.
func CreatedAtGT(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "CreatedAt" field.
func CreatedAtGTE(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "CreatedAt" field.
func CreatedAtLT(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "CreatedAt" field.
func CreatedAtLTE(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "UpdatedAt" field.
func UpdatedAtEQ(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "UpdatedAt" field.
func UpdatedAtNEQ(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "UpdatedAt" field.
func UpdatedAtIn(vs ...time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "UpdatedAt" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "UpdatedAt" field.
func UpdatedAtGT(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "UpdatedAt" field.
func UpdatedAtGTE(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "UpdatedAt" field.
func UpdatedAtLT(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "UpdatedAt" field.
func UpdatedAtLTE(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "DeletedAt" field.
func DeletedAtEQ(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "DeletedAt" field.
func DeletedAtNEQ(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "DeletedAt" field.
func DeletedAtIn(vs ...time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "DeletedAt" field.
func DeletedAtNotIn(vs ...time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "DeletedAt" field.
func DeletedAtGT(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "DeletedAt" field.
func DeletedAtGTE(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "DeletedAt" field.
func DeletedAtLT(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "DeletedAt" field.
func DeletedAtLTE(v time.Time) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "DeletedAt" field.
func DeletedAtIsNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "DeletedAt" field.
func DeletedAtNotNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotNull(FieldDeletedAt))
}

// DomainEQ applies the EQ predicate on the "domain" field.
func DomainEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldDomain, v))
}

// DomainNEQ applies the NEQ predicate on the "domain" field.
func DomainNEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldDomain, v))
}

// DomainIn applies the In predicate on the "domain" field.
func DomainIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldDomain, vs...))
}

// DomainNotIn applies the NotIn predicate on the "domain" field.
func DomainNotIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldDomain, vs...))
}

// DomainGT applies the GT predicate on the "domain" field.
func DomainGT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldDomain, v))
}

// DomainGTE applies the GTE predicate on the "domain" field.
func DomainGTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldDomain, v))
}

// DomainLT applies the LT predicate on the "domain" field.
func DomainLT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldDomain, v))
}

// DomainLTE applies the LTE predicate on the "domain" field.
func DomainLTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldDomain, v))
}

// DomainContains applies the Contains predicate on the "domain" field.
func DomainContains(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContains(FieldDomain, v))
}

// DomainHasPrefix applies the HasPrefix predicate on the "domain" field.
func DomainHasPrefix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasPrefix(FieldDomain, v))
}

// DomainHasSuffix applies the HasSuffix predicate on the "domain" field.
func DomainHasSuffix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasSuffix(FieldDomain, v))
}

// DomainIsNil applies the IsNil predicate on the "domain" field.
func DomainIsNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIsNull(FieldDomain))
}

// DomainNotNil applies the NotNil predicate on the "domain" field.
func DomainNotNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotNull(FieldDomain))
}

// DomainEqualFold applies the EqualFold predicate on the "domain" field.
func DomainEqualFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEqualFold(FieldDomain, v))
}

// DomainContainsFold applies the ContainsFold predicate on the "domain" field.
func DomainContainsFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContainsFold(FieldDomain, v))
}

// PublicEQ applies the EQ predicate on the "public" field.
func PublicEQ(v bool) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldPublic, v))
}

// PublicNEQ applies the NEQ predicate on the "public" field.
func PublicNEQ(v bool) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldPublic, v))
}

// UserAgentEQ applies the EQ predicate on the "UserAgent" field.
func UserAgentEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "UserAgent" field.
func UserAgentNEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "UserAgent" field.
func UserAgentIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "UserAgent" field.
func UserAgentNotIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "UserAgent" field.
func UserAgentGT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "UserAgent" field.
func UserAgentGTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "UserAgent" field.
func UserAgentLT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "UserAgent" field.
func UserAgentLTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "UserAgent" field.
func UserAgentContains(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "UserAgent" field.
func UserAgentHasPrefix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "UserAgent" field.
func UserAgentHasSuffix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentEqualFold applies the EqualFold predicate on the "UserAgent" field.
func UserAgentEqualFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "UserAgent" field.
func UserAgentContainsFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContainsFold(FieldUserAgent, v))
}

// RedirectURIEQ applies the EQ predicate on the "redirect_uri" field.
func RedirectURIEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldRedirectURI, v))
}

// RedirectURINEQ applies the NEQ predicate on the "redirect_uri" field.
func RedirectURINEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldRedirectURI, v))
}

// RedirectURIIn applies the In predicate on the "redirect_uri" field.
func RedirectURIIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldRedirectURI, vs...))
}

// RedirectURINotIn applies the NotIn predicate on the "redirect_uri" field.
func RedirectURINotIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldRedirectURI, vs...))
}

// RedirectURIGT applies the GT predicate on the "redirect_uri" field.
func RedirectURIGT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldRedirectURI, v))
}

// RedirectURIGTE applies the GTE predicate on the "redirect_uri" field.
func RedirectURIGTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldRedirectURI, v))
}

// RedirectURILT applies the LT predicate on the "redirect_uri" field.
func RedirectURILT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldRedirectURI, v))
}

// RedirectURILTE applies the LTE predicate on the "redirect_uri" field.
func RedirectURILTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldRedirectURI, v))
}

// RedirectURIContains applies the Contains predicate on the "redirect_uri" field.
func RedirectURIContains(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContains(FieldRedirectURI, v))
}

// RedirectURIHasPrefix applies the HasPrefix predicate on the "redirect_uri" field.
func RedirectURIHasPrefix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasPrefix(FieldRedirectURI, v))
}

// RedirectURIHasSuffix applies the HasSuffix predicate on the "redirect_uri" field.
func RedirectURIHasSuffix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasSuffix(FieldRedirectURI, v))
}

// RedirectURIIsNil applies the IsNil predicate on the "redirect_uri" field.
func RedirectURIIsNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIsNull(FieldRedirectURI))
}

// RedirectURINotNil applies the NotNil predicate on the "redirect_uri" field.
func RedirectURINotNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotNull(FieldRedirectURI))
}

// RedirectURIEqualFold applies the EqualFold predicate on the "redirect_uri" field.
func RedirectURIEqualFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEqualFold(FieldRedirectURI, v))
}

// RedirectURIContainsFold applies the ContainsFold predicate on the "redirect_uri" field.
func RedirectURIContainsFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContainsFold(FieldRedirectURI, v))
}

// CreatedByEQ applies the EQ predicate on the "CreatedBy" field.
func CreatedByEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "CreatedBy" field.
func CreatedByNEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "CreatedBy" field.
func CreatedByIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "CreatedBy" field.
func CreatedByNotIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "CreatedBy" field.
func CreatedByGT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "CreatedBy" field.
func CreatedByGTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "CreatedBy" field.
func CreatedByLT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "CreatedBy" field.
func CreatedByLTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "CreatedBy" field.
func CreatedByContains(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "CreatedBy" field.
func CreatedByHasPrefix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "CreatedBy" field.
func CreatedByHasSuffix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByEqualFold applies the EqualFold predicate on the "CreatedBy" field.
func CreatedByEqualFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "CreatedBy" field.
func CreatedByContainsFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContainsFold(FieldCreatedBy, v))
}

// UpdatedByEQ applies the EQ predicate on the "UpdatedBy" field.
func UpdatedByEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "UpdatedBy" field.
func UpdatedByNEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "UpdatedBy" field.
func UpdatedByIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "UpdatedBy" field.
func UpdatedByNotIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "UpdatedBy" field.
func UpdatedByGT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "UpdatedBy" field.
func UpdatedByGTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "UpdatedBy" field.
func UpdatedByLT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "UpdatedBy" field.
func UpdatedByLTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "UpdatedBy" field.
func UpdatedByContains(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "UpdatedBy" field.
func UpdatedByHasPrefix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "UpdatedBy" field.
func UpdatedByHasSuffix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "UpdatedBy" field.
func UpdatedByEqualFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "UpdatedBy" field.
func UpdatedByContainsFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// DeletedByEQ applies the EQ predicate on the "DeletedBy" field.
func DeletedByEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEQ(FieldDeletedBy, v))
}

// DeletedByNEQ applies the NEQ predicate on the "DeletedBy" field.
func DeletedByNEQ(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNEQ(FieldDeletedBy, v))
}

// DeletedByIn applies the In predicate on the "DeletedBy" field.
func DeletedByIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIn(FieldDeletedBy, vs...))
}

// DeletedByNotIn applies the NotIn predicate on the "DeletedBy" field.
func DeletedByNotIn(vs ...string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotIn(FieldDeletedBy, vs...))
}

// DeletedByGT applies the GT predicate on the "DeletedBy" field.
func DeletedByGT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGT(FieldDeletedBy, v))
}

// DeletedByGTE applies the GTE predicate on the "DeletedBy" field.
func DeletedByGTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldGTE(FieldDeletedBy, v))
}

// DeletedByLT applies the LT predicate on the "DeletedBy" field.
func DeletedByLT(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLT(FieldDeletedBy, v))
}

// DeletedByLTE applies the LTE predicate on the "DeletedBy" field.
func DeletedByLTE(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldLTE(FieldDeletedBy, v))
}

// DeletedByContains applies the Contains predicate on the "DeletedBy" field.
func DeletedByContains(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContains(FieldDeletedBy, v))
}

// DeletedByHasPrefix applies the HasPrefix predicate on the "DeletedBy" field.
func DeletedByHasPrefix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasPrefix(FieldDeletedBy, v))
}

// DeletedByHasSuffix applies the HasSuffix predicate on the "DeletedBy" field.
func DeletedByHasSuffix(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldHasSuffix(FieldDeletedBy, v))
}

// DeletedByIsNil applies the IsNil predicate on the "DeletedBy" field.
func DeletedByIsNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldIsNull(FieldDeletedBy))
}

// DeletedByNotNil applies the NotNil predicate on the "DeletedBy" field.
func DeletedByNotNil() predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldNotNull(FieldDeletedBy))
}

// DeletedByEqualFold applies the EqualFold predicate on the "DeletedBy" field.
func DeletedByEqualFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldEqualFold(FieldDeletedBy, v))
}

// DeletedByContainsFold applies the ContainsFold predicate on the "DeletedBy" field.
func DeletedByContainsFold(v string) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.FieldContainsFold(FieldDeletedBy, v))
}

// HasClientToken applies the HasEdge predicate on the "ClientToken" edge.
func HasClientToken() predicate.TblAuthClient {
	return predicate.TblAuthClient(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, ClientTokenTable, ClientTokenColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasClientTokenWith applies the HasEdge predicate on the "ClientToken" edge with a given conditions (other predicates).
func HasClientTokenWith(preds ...predicate.TblAuthToken) predicate.TblAuthClient {
	return predicate.TblAuthClient(func(s *sql.Selector) {
		step := newClientTokenStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TblAuthClient) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TblAuthClient) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TblAuthClient) predicate.TblAuthClient {
	return predicate.TblAuthClient(sql.NotPredicates(p))
}
