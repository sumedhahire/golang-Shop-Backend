// Code generated by ent, DO NOT EDIT.

package tblauthtoken

import (
	"inventory/ent/entgen/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldID, id))
}

// AuthUUID applies equality check predicate on the "auth_uuid" field. It's identical to AuthUUIDEQ.
func AuthUUID(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAuthUUID, v))
}

// AuthXref applies equality check predicate on the "auth_xref" field. It's identical to AuthXrefEQ.
func AuthXref(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAuthXref, v))
}

// Accesstoken applies equality check predicate on the "accesstoken" field. It's identical to AccesstokenEQ.
func Accesstoken(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAccesstoken, v))
}

// Accesstokencreatedat applies equality check predicate on the "accesstokencreatedat" field. It's identical to AccesstokencreatedatEQ.
func Accesstokencreatedat(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAccesstokencreatedat, v))
}

// Accesstokenexpiresin applies equality check predicate on the "accesstokenexpiresin" field. It's identical to AccesstokenexpiresinEQ.
func Accesstokenexpiresin(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAccesstokenexpiresin, v))
}

// Clientid applies equality check predicate on the "clientid" field. It's identical to ClientidEQ.
func Clientid(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldClientid, v))
}

// UserUlid applies equality check predicate on the "user_ulid" field. It's identical to UserUlidEQ.
func UserUlid(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldUserUlid, v))
}

// Refreshtoken applies equality check predicate on the "refreshtoken" field. It's identical to RefreshtokenEQ.
func Refreshtoken(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldRefreshtoken, v))
}

// Refreshtokencreatedat applies equality check predicate on the "refreshtokencreatedat" field. It's identical to RefreshtokencreatedatEQ.
func Refreshtokencreatedat(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldRefreshtokencreatedat, v))
}

// Refreshtokenexpiresin applies equality check predicate on the "refreshtokenexpiresin" field. It's identical to RefreshtokenexpiresinEQ.
func Refreshtokenexpiresin(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldRefreshtokenexpiresin, v))
}

// Createdat applies equality check predicate on the "createdat" field. It's identical to CreatedatEQ.
func Createdat(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCreatedat, v))
}

// Updatedat applies equality check predicate on the "updatedat" field. It's identical to UpdatedatEQ.
func Updatedat(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldUpdatedat, v))
}

// Deletedat applies equality check predicate on the "deletedat" field. It's identical to DeletedatEQ.
func Deletedat(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldDeletedat, v))
}

// IPAddress applies equality check predicate on the "ip_address" field. It's identical to IPAddressEQ.
func IPAddress(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldIPAddress, v))
}

// Useragent applies equality check predicate on the "useragent" field. It's identical to UseragentEQ.
func Useragent(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldUseragent, v))
}

// Createdby applies equality check predicate on the "createdby" field. It's identical to CreatedbyEQ.
func Createdby(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCreatedby, v))
}

// Updatedby applies equality check predicate on the "updatedby" field. It's identical to UpdatedbyEQ.
func Updatedby(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldUpdatedby, v))
}

// Deletedby applies equality check predicate on the "deletedby" field. It's identical to DeletedbyEQ.
func Deletedby(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldDeletedby, v))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCode, v))
}

// Codecreatedat applies equality check predicate on the "codecreatedat" field. It's identical to CodecreatedatEQ.
func Codecreatedat(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCodecreatedat, v))
}

// Codeexpiresin applies equality check predicate on the "codeexpiresin" field. It's identical to CodeexpiresinEQ.
func Codeexpiresin(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCodeexpiresin, v))
}

// Codechallenge applies equality check predicate on the "codechallenge" field. It's identical to CodechallengeEQ.
func Codechallenge(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCodechallenge, v))
}

// RedirectURI applies equality check predicate on the "redirect_uri" field. It's identical to RedirectURIEQ.
func RedirectURI(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldRedirectURI, v))
}

// Scope applies equality check predicate on the "scope" field. It's identical to ScopeEQ.
func Scope(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldScope, v))
}

// AuthUUIDEQ applies the EQ predicate on the "auth_uuid" field.
func AuthUUIDEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAuthUUID, v))
}

// AuthUUIDNEQ applies the NEQ predicate on the "auth_uuid" field.
func AuthUUIDNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldAuthUUID, v))
}

// AuthUUIDIn applies the In predicate on the "auth_uuid" field.
func AuthUUIDIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldAuthUUID, vs...))
}

// AuthUUIDNotIn applies the NotIn predicate on the "auth_uuid" field.
func AuthUUIDNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldAuthUUID, vs...))
}

// AuthUUIDGT applies the GT predicate on the "auth_uuid" field.
func AuthUUIDGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldAuthUUID, v))
}

// AuthUUIDGTE applies the GTE predicate on the "auth_uuid" field.
func AuthUUIDGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldAuthUUID, v))
}

// AuthUUIDLT applies the LT predicate on the "auth_uuid" field.
func AuthUUIDLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldAuthUUID, v))
}

// AuthUUIDLTE applies the LTE predicate on the "auth_uuid" field.
func AuthUUIDLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldAuthUUID, v))
}

// AuthUUIDContains applies the Contains predicate on the "auth_uuid" field.
func AuthUUIDContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldAuthUUID, v))
}

// AuthUUIDHasPrefix applies the HasPrefix predicate on the "auth_uuid" field.
func AuthUUIDHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldAuthUUID, v))
}

// AuthUUIDHasSuffix applies the HasSuffix predicate on the "auth_uuid" field.
func AuthUUIDHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldAuthUUID, v))
}

// AuthUUIDEqualFold applies the EqualFold predicate on the "auth_uuid" field.
func AuthUUIDEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldAuthUUID, v))
}

// AuthUUIDContainsFold applies the ContainsFold predicate on the "auth_uuid" field.
func AuthUUIDContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldAuthUUID, v))
}

// AuthXrefEQ applies the EQ predicate on the "auth_xref" field.
func AuthXrefEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAuthXref, v))
}

// AuthXrefNEQ applies the NEQ predicate on the "auth_xref" field.
func AuthXrefNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldAuthXref, v))
}

// AuthXrefIn applies the In predicate on the "auth_xref" field.
func AuthXrefIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldAuthXref, vs...))
}

// AuthXrefNotIn applies the NotIn predicate on the "auth_xref" field.
func AuthXrefNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldAuthXref, vs...))
}

// AuthXrefGT applies the GT predicate on the "auth_xref" field.
func AuthXrefGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldAuthXref, v))
}

// AuthXrefGTE applies the GTE predicate on the "auth_xref" field.
func AuthXrefGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldAuthXref, v))
}

// AuthXrefLT applies the LT predicate on the "auth_xref" field.
func AuthXrefLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldAuthXref, v))
}

// AuthXrefLTE applies the LTE predicate on the "auth_xref" field.
func AuthXrefLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldAuthXref, v))
}

// AuthXrefContains applies the Contains predicate on the "auth_xref" field.
func AuthXrefContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldAuthXref, v))
}

// AuthXrefHasPrefix applies the HasPrefix predicate on the "auth_xref" field.
func AuthXrefHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldAuthXref, v))
}

// AuthXrefHasSuffix applies the HasSuffix predicate on the "auth_xref" field.
func AuthXrefHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldAuthXref, v))
}

// AuthXrefEqualFold applies the EqualFold predicate on the "auth_xref" field.
func AuthXrefEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldAuthXref, v))
}

// AuthXrefContainsFold applies the ContainsFold predicate on the "auth_xref" field.
func AuthXrefContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldAuthXref, v))
}

// AccesstokenEQ applies the EQ predicate on the "accesstoken" field.
func AccesstokenEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAccesstoken, v))
}

// AccesstokenNEQ applies the NEQ predicate on the "accesstoken" field.
func AccesstokenNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldAccesstoken, v))
}

// AccesstokenIn applies the In predicate on the "accesstoken" field.
func AccesstokenIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldAccesstoken, vs...))
}

// AccesstokenNotIn applies the NotIn predicate on the "accesstoken" field.
func AccesstokenNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldAccesstoken, vs...))
}

// AccesstokenGT applies the GT predicate on the "accesstoken" field.
func AccesstokenGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldAccesstoken, v))
}

// AccesstokenGTE applies the GTE predicate on the "accesstoken" field.
func AccesstokenGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldAccesstoken, v))
}

// AccesstokenLT applies the LT predicate on the "accesstoken" field.
func AccesstokenLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldAccesstoken, v))
}

// AccesstokenLTE applies the LTE predicate on the "accesstoken" field.
func AccesstokenLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldAccesstoken, v))
}

// AccesstokenContains applies the Contains predicate on the "accesstoken" field.
func AccesstokenContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldAccesstoken, v))
}

// AccesstokenHasPrefix applies the HasPrefix predicate on the "accesstoken" field.
func AccesstokenHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldAccesstoken, v))
}

// AccesstokenHasSuffix applies the HasSuffix predicate on the "accesstoken" field.
func AccesstokenHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldAccesstoken, v))
}

// AccesstokenEqualFold applies the EqualFold predicate on the "accesstoken" field.
func AccesstokenEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldAccesstoken, v))
}

// AccesstokenContainsFold applies the ContainsFold predicate on the "accesstoken" field.
func AccesstokenContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldAccesstoken, v))
}

// AccesstokencreatedatEQ applies the EQ predicate on the "accesstokencreatedat" field.
func AccesstokencreatedatEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAccesstokencreatedat, v))
}

// AccesstokencreatedatNEQ applies the NEQ predicate on the "accesstokencreatedat" field.
func AccesstokencreatedatNEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldAccesstokencreatedat, v))
}

// AccesstokencreatedatIn applies the In predicate on the "accesstokencreatedat" field.
func AccesstokencreatedatIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldAccesstokencreatedat, vs...))
}

// AccesstokencreatedatNotIn applies the NotIn predicate on the "accesstokencreatedat" field.
func AccesstokencreatedatNotIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldAccesstokencreatedat, vs...))
}

// AccesstokencreatedatGT applies the GT predicate on the "accesstokencreatedat" field.
func AccesstokencreatedatGT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldAccesstokencreatedat, v))
}

// AccesstokencreatedatGTE applies the GTE predicate on the "accesstokencreatedat" field.
func AccesstokencreatedatGTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldAccesstokencreatedat, v))
}

// AccesstokencreatedatLT applies the LT predicate on the "accesstokencreatedat" field.
func AccesstokencreatedatLT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldAccesstokencreatedat, v))
}

// AccesstokencreatedatLTE applies the LTE predicate on the "accesstokencreatedat" field.
func AccesstokencreatedatLTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldAccesstokencreatedat, v))
}

// AccesstokenexpiresinEQ applies the EQ predicate on the "accesstokenexpiresin" field.
func AccesstokenexpiresinEQ(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldAccesstokenexpiresin, v))
}

// AccesstokenexpiresinNEQ applies the NEQ predicate on the "accesstokenexpiresin" field.
func AccesstokenexpiresinNEQ(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldAccesstokenexpiresin, v))
}

// AccesstokenexpiresinIn applies the In predicate on the "accesstokenexpiresin" field.
func AccesstokenexpiresinIn(vs ...int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldAccesstokenexpiresin, vs...))
}

// AccesstokenexpiresinNotIn applies the NotIn predicate on the "accesstokenexpiresin" field.
func AccesstokenexpiresinNotIn(vs ...int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldAccesstokenexpiresin, vs...))
}

// AccesstokenexpiresinGT applies the GT predicate on the "accesstokenexpiresin" field.
func AccesstokenexpiresinGT(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldAccesstokenexpiresin, v))
}

// AccesstokenexpiresinGTE applies the GTE predicate on the "accesstokenexpiresin" field.
func AccesstokenexpiresinGTE(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldAccesstokenexpiresin, v))
}

// AccesstokenexpiresinLT applies the LT predicate on the "accesstokenexpiresin" field.
func AccesstokenexpiresinLT(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldAccesstokenexpiresin, v))
}

// AccesstokenexpiresinLTE applies the LTE predicate on the "accesstokenexpiresin" field.
func AccesstokenexpiresinLTE(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldAccesstokenexpiresin, v))
}

// ClientidEQ applies the EQ predicate on the "clientid" field.
func ClientidEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldClientid, v))
}

// ClientidNEQ applies the NEQ predicate on the "clientid" field.
func ClientidNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldClientid, v))
}

// ClientidIn applies the In predicate on the "clientid" field.
func ClientidIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldClientid, vs...))
}

// ClientidNotIn applies the NotIn predicate on the "clientid" field.
func ClientidNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldClientid, vs...))
}

// ClientidGT applies the GT predicate on the "clientid" field.
func ClientidGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldClientid, v))
}

// ClientidGTE applies the GTE predicate on the "clientid" field.
func ClientidGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldClientid, v))
}

// ClientidLT applies the LT predicate on the "clientid" field.
func ClientidLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldClientid, v))
}

// ClientidLTE applies the LTE predicate on the "clientid" field.
func ClientidLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldClientid, v))
}

// ClientidContains applies the Contains predicate on the "clientid" field.
func ClientidContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldClientid, v))
}

// ClientidHasPrefix applies the HasPrefix predicate on the "clientid" field.
func ClientidHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldClientid, v))
}

// ClientidHasSuffix applies the HasSuffix predicate on the "clientid" field.
func ClientidHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldClientid, v))
}

// ClientidIsNil applies the IsNil predicate on the "clientid" field.
func ClientidIsNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIsNull(FieldClientid))
}

// ClientidNotNil applies the NotNil predicate on the "clientid" field.
func ClientidNotNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotNull(FieldClientid))
}

// ClientidEqualFold applies the EqualFold predicate on the "clientid" field.
func ClientidEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldClientid, v))
}

// ClientidContainsFold applies the ContainsFold predicate on the "clientid" field.
func ClientidContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldClientid, v))
}

// UserUlidEQ applies the EQ predicate on the "user_ulid" field.
func UserUlidEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldUserUlid, v))
}

// UserUlidNEQ applies the NEQ predicate on the "user_ulid" field.
func UserUlidNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldUserUlid, v))
}

// UserUlidIn applies the In predicate on the "user_ulid" field.
func UserUlidIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldUserUlid, vs...))
}

// UserUlidNotIn applies the NotIn predicate on the "user_ulid" field.
func UserUlidNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldUserUlid, vs...))
}

// UserUlidGT applies the GT predicate on the "user_ulid" field.
func UserUlidGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldUserUlid, v))
}

// UserUlidGTE applies the GTE predicate on the "user_ulid" field.
func UserUlidGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldUserUlid, v))
}

// UserUlidLT applies the LT predicate on the "user_ulid" field.
func UserUlidLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldUserUlid, v))
}

// UserUlidLTE applies the LTE predicate on the "user_ulid" field.
func UserUlidLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldUserUlid, v))
}

// UserUlidContains applies the Contains predicate on the "user_ulid" field.
func UserUlidContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldUserUlid, v))
}

// UserUlidHasPrefix applies the HasPrefix predicate on the "user_ulid" field.
func UserUlidHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldUserUlid, v))
}

// UserUlidHasSuffix applies the HasSuffix predicate on the "user_ulid" field.
func UserUlidHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldUserUlid, v))
}

// UserUlidIsNil applies the IsNil predicate on the "user_ulid" field.
func UserUlidIsNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIsNull(FieldUserUlid))
}

// UserUlidNotNil applies the NotNil predicate on the "user_ulid" field.
func UserUlidNotNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotNull(FieldUserUlid))
}

// UserUlidEqualFold applies the EqualFold predicate on the "user_ulid" field.
func UserUlidEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldUserUlid, v))
}

// UserUlidContainsFold applies the ContainsFold predicate on the "user_ulid" field.
func UserUlidContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldUserUlid, v))
}

// RefreshtokenEQ applies the EQ predicate on the "refreshtoken" field.
func RefreshtokenEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldRefreshtoken, v))
}

// RefreshtokenNEQ applies the NEQ predicate on the "refreshtoken" field.
func RefreshtokenNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldRefreshtoken, v))
}

// RefreshtokenIn applies the In predicate on the "refreshtoken" field.
func RefreshtokenIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldRefreshtoken, vs...))
}

// RefreshtokenNotIn applies the NotIn predicate on the "refreshtoken" field.
func RefreshtokenNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldRefreshtoken, vs...))
}

// RefreshtokenGT applies the GT predicate on the "refreshtoken" field.
func RefreshtokenGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldRefreshtoken, v))
}

// RefreshtokenGTE applies the GTE predicate on the "refreshtoken" field.
func RefreshtokenGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldRefreshtoken, v))
}

// RefreshtokenLT applies the LT predicate on the "refreshtoken" field.
func RefreshtokenLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldRefreshtoken, v))
}

// RefreshtokenLTE applies the LTE predicate on the "refreshtoken" field.
func RefreshtokenLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldRefreshtoken, v))
}

// RefreshtokenContains applies the Contains predicate on the "refreshtoken" field.
func RefreshtokenContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldRefreshtoken, v))
}

// RefreshtokenHasPrefix applies the HasPrefix predicate on the "refreshtoken" field.
func RefreshtokenHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldRefreshtoken, v))
}

// RefreshtokenHasSuffix applies the HasSuffix predicate on the "refreshtoken" field.
func RefreshtokenHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldRefreshtoken, v))
}

// RefreshtokenEqualFold applies the EqualFold predicate on the "refreshtoken" field.
func RefreshtokenEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldRefreshtoken, v))
}

// RefreshtokenContainsFold applies the ContainsFold predicate on the "refreshtoken" field.
func RefreshtokenContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldRefreshtoken, v))
}

// RefreshtokencreatedatEQ applies the EQ predicate on the "refreshtokencreatedat" field.
func RefreshtokencreatedatEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldRefreshtokencreatedat, v))
}

// RefreshtokencreatedatNEQ applies the NEQ predicate on the "refreshtokencreatedat" field.
func RefreshtokencreatedatNEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldRefreshtokencreatedat, v))
}

// RefreshtokencreatedatIn applies the In predicate on the "refreshtokencreatedat" field.
func RefreshtokencreatedatIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldRefreshtokencreatedat, vs...))
}

// RefreshtokencreatedatNotIn applies the NotIn predicate on the "refreshtokencreatedat" field.
func RefreshtokencreatedatNotIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldRefreshtokencreatedat, vs...))
}

// RefreshtokencreatedatGT applies the GT predicate on the "refreshtokencreatedat" field.
func RefreshtokencreatedatGT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldRefreshtokencreatedat, v))
}

// RefreshtokencreatedatGTE applies the GTE predicate on the "refreshtokencreatedat" field.
func RefreshtokencreatedatGTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldRefreshtokencreatedat, v))
}

// RefreshtokencreatedatLT applies the LT predicate on the "refreshtokencreatedat" field.
func RefreshtokencreatedatLT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldRefreshtokencreatedat, v))
}

// RefreshtokencreatedatLTE applies the LTE predicate on the "refreshtokencreatedat" field.
func RefreshtokencreatedatLTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldRefreshtokencreatedat, v))
}

// RefreshtokenexpiresinEQ applies the EQ predicate on the "refreshtokenexpiresin" field.
func RefreshtokenexpiresinEQ(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldRefreshtokenexpiresin, v))
}

// RefreshtokenexpiresinNEQ applies the NEQ predicate on the "refreshtokenexpiresin" field.
func RefreshtokenexpiresinNEQ(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldRefreshtokenexpiresin, v))
}

// RefreshtokenexpiresinIn applies the In predicate on the "refreshtokenexpiresin" field.
func RefreshtokenexpiresinIn(vs ...int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldRefreshtokenexpiresin, vs...))
}

// RefreshtokenexpiresinNotIn applies the NotIn predicate on the "refreshtokenexpiresin" field.
func RefreshtokenexpiresinNotIn(vs ...int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldRefreshtokenexpiresin, vs...))
}

// RefreshtokenexpiresinGT applies the GT predicate on the "refreshtokenexpiresin" field.
func RefreshtokenexpiresinGT(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldRefreshtokenexpiresin, v))
}

// RefreshtokenexpiresinGTE applies the GTE predicate on the "refreshtokenexpiresin" field.
func RefreshtokenexpiresinGTE(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldRefreshtokenexpiresin, v))
}

// RefreshtokenexpiresinLT applies the LT predicate on the "refreshtokenexpiresin" field.
func RefreshtokenexpiresinLT(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldRefreshtokenexpiresin, v))
}

// RefreshtokenexpiresinLTE applies the LTE predicate on the "refreshtokenexpiresin" field.
func RefreshtokenexpiresinLTE(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldRefreshtokenexpiresin, v))
}

// CreatedatEQ applies the EQ predicate on the "createdat" field.
func CreatedatEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCreatedat, v))
}

// CreatedatNEQ applies the NEQ predicate on the "createdat" field.
func CreatedatNEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldCreatedat, v))
}

// CreatedatIn applies the In predicate on the "createdat" field.
func CreatedatIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldCreatedat, vs...))
}

// CreatedatNotIn applies the NotIn predicate on the "createdat" field.
func CreatedatNotIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldCreatedat, vs...))
}

// CreatedatGT applies the GT predicate on the "createdat" field.
func CreatedatGT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldCreatedat, v))
}

// CreatedatGTE applies the GTE predicate on the "createdat" field.
func CreatedatGTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldCreatedat, v))
}

// CreatedatLT applies the LT predicate on the "createdat" field.
func CreatedatLT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldCreatedat, v))
}

// CreatedatLTE applies the LTE predicate on the "createdat" field.
func CreatedatLTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldCreatedat, v))
}

// UpdatedatEQ applies the EQ predicate on the "updatedat" field.
func UpdatedatEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldUpdatedat, v))
}

// UpdatedatNEQ applies the NEQ predicate on the "updatedat" field.
func UpdatedatNEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldUpdatedat, v))
}

// UpdatedatIn applies the In predicate on the "updatedat" field.
func UpdatedatIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldUpdatedat, vs...))
}

// UpdatedatNotIn applies the NotIn predicate on the "updatedat" field.
func UpdatedatNotIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldUpdatedat, vs...))
}

// UpdatedatGT applies the GT predicate on the "updatedat" field.
func UpdatedatGT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldUpdatedat, v))
}

// UpdatedatGTE applies the GTE predicate on the "updatedat" field.
func UpdatedatGTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldUpdatedat, v))
}

// UpdatedatLT applies the LT predicate on the "updatedat" field.
func UpdatedatLT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldUpdatedat, v))
}

// UpdatedatLTE applies the LTE predicate on the "updatedat" field.
func UpdatedatLTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldUpdatedat, v))
}

// DeletedatEQ applies the EQ predicate on the "deletedat" field.
func DeletedatEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldDeletedat, v))
}

// DeletedatNEQ applies the NEQ predicate on the "deletedat" field.
func DeletedatNEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldDeletedat, v))
}

// DeletedatIn applies the In predicate on the "deletedat" field.
func DeletedatIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldDeletedat, vs...))
}

// DeletedatNotIn applies the NotIn predicate on the "deletedat" field.
func DeletedatNotIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldDeletedat, vs...))
}

// DeletedatGT applies the GT predicate on the "deletedat" field.
func DeletedatGT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldDeletedat, v))
}

// DeletedatGTE applies the GTE predicate on the "deletedat" field.
func DeletedatGTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldDeletedat, v))
}

// DeletedatLT applies the LT predicate on the "deletedat" field.
func DeletedatLT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldDeletedat, v))
}

// DeletedatLTE applies the LTE predicate on the "deletedat" field.
func DeletedatLTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldDeletedat, v))
}

// DeletedatIsNil applies the IsNil predicate on the "deletedat" field.
func DeletedatIsNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIsNull(FieldDeletedat))
}

// DeletedatNotNil applies the NotNil predicate on the "deletedat" field.
func DeletedatNotNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotNull(FieldDeletedat))
}

// IPAddressEQ applies the EQ predicate on the "ip_address" field.
func IPAddressEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldIPAddress, v))
}

// IPAddressNEQ applies the NEQ predicate on the "ip_address" field.
func IPAddressNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldIPAddress, v))
}

// IPAddressIn applies the In predicate on the "ip_address" field.
func IPAddressIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldIPAddress, vs...))
}

// IPAddressNotIn applies the NotIn predicate on the "ip_address" field.
func IPAddressNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldIPAddress, vs...))
}

// IPAddressGT applies the GT predicate on the "ip_address" field.
func IPAddressGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldIPAddress, v))
}

// IPAddressGTE applies the GTE predicate on the "ip_address" field.
func IPAddressGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldIPAddress, v))
}

// IPAddressLT applies the LT predicate on the "ip_address" field.
func IPAddressLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldIPAddress, v))
}

// IPAddressLTE applies the LTE predicate on the "ip_address" field.
func IPAddressLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldIPAddress, v))
}

// IPAddressContains applies the Contains predicate on the "ip_address" field.
func IPAddressContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldIPAddress, v))
}

// IPAddressHasPrefix applies the HasPrefix predicate on the "ip_address" field.
func IPAddressHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldIPAddress, v))
}

// IPAddressHasSuffix applies the HasSuffix predicate on the "ip_address" field.
func IPAddressHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldIPAddress, v))
}

// IPAddressEqualFold applies the EqualFold predicate on the "ip_address" field.
func IPAddressEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldIPAddress, v))
}

// IPAddressContainsFold applies the ContainsFold predicate on the "ip_address" field.
func IPAddressContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldIPAddress, v))
}

// UseragentEQ applies the EQ predicate on the "useragent" field.
func UseragentEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldUseragent, v))
}

// UseragentNEQ applies the NEQ predicate on the "useragent" field.
func UseragentNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldUseragent, v))
}

// UseragentIn applies the In predicate on the "useragent" field.
func UseragentIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldUseragent, vs...))
}

// UseragentNotIn applies the NotIn predicate on the "useragent" field.
func UseragentNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldUseragent, vs...))
}

// UseragentGT applies the GT predicate on the "useragent" field.
func UseragentGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldUseragent, v))
}

// UseragentGTE applies the GTE predicate on the "useragent" field.
func UseragentGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldUseragent, v))
}

// UseragentLT applies the LT predicate on the "useragent" field.
func UseragentLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldUseragent, v))
}

// UseragentLTE applies the LTE predicate on the "useragent" field.
func UseragentLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldUseragent, v))
}

// UseragentContains applies the Contains predicate on the "useragent" field.
func UseragentContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldUseragent, v))
}

// UseragentHasPrefix applies the HasPrefix predicate on the "useragent" field.
func UseragentHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldUseragent, v))
}

// UseragentHasSuffix applies the HasSuffix predicate on the "useragent" field.
func UseragentHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldUseragent, v))
}

// UseragentEqualFold applies the EqualFold predicate on the "useragent" field.
func UseragentEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldUseragent, v))
}

// UseragentContainsFold applies the ContainsFold predicate on the "useragent" field.
func UseragentContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldUseragent, v))
}

// CreatedbyEQ applies the EQ predicate on the "createdby" field.
func CreatedbyEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCreatedby, v))
}

// CreatedbyNEQ applies the NEQ predicate on the "createdby" field.
func CreatedbyNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldCreatedby, v))
}

// CreatedbyIn applies the In predicate on the "createdby" field.
func CreatedbyIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldCreatedby, vs...))
}

// CreatedbyNotIn applies the NotIn predicate on the "createdby" field.
func CreatedbyNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldCreatedby, vs...))
}

// CreatedbyGT applies the GT predicate on the "createdby" field.
func CreatedbyGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldCreatedby, v))
}

// CreatedbyGTE applies the GTE predicate on the "createdby" field.
func CreatedbyGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldCreatedby, v))
}

// CreatedbyLT applies the LT predicate on the "createdby" field.
func CreatedbyLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldCreatedby, v))
}

// CreatedbyLTE applies the LTE predicate on the "createdby" field.
func CreatedbyLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldCreatedby, v))
}

// CreatedbyContains applies the Contains predicate on the "createdby" field.
func CreatedbyContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldCreatedby, v))
}

// CreatedbyHasPrefix applies the HasPrefix predicate on the "createdby" field.
func CreatedbyHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldCreatedby, v))
}

// CreatedbyHasSuffix applies the HasSuffix predicate on the "createdby" field.
func CreatedbyHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldCreatedby, v))
}

// CreatedbyEqualFold applies the EqualFold predicate on the "createdby" field.
func CreatedbyEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldCreatedby, v))
}

// CreatedbyContainsFold applies the ContainsFold predicate on the "createdby" field.
func CreatedbyContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldCreatedby, v))
}

// UpdatedbyEQ applies the EQ predicate on the "updatedby" field.
func UpdatedbyEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldUpdatedby, v))
}

// UpdatedbyNEQ applies the NEQ predicate on the "updatedby" field.
func UpdatedbyNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldUpdatedby, v))
}

// UpdatedbyIn applies the In predicate on the "updatedby" field.
func UpdatedbyIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldUpdatedby, vs...))
}

// UpdatedbyNotIn applies the NotIn predicate on the "updatedby" field.
func UpdatedbyNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldUpdatedby, vs...))
}

// UpdatedbyGT applies the GT predicate on the "updatedby" field.
func UpdatedbyGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldUpdatedby, v))
}

// UpdatedbyGTE applies the GTE predicate on the "updatedby" field.
func UpdatedbyGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldUpdatedby, v))
}

// UpdatedbyLT applies the LT predicate on the "updatedby" field.
func UpdatedbyLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldUpdatedby, v))
}

// UpdatedbyLTE applies the LTE predicate on the "updatedby" field.
func UpdatedbyLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldUpdatedby, v))
}

// UpdatedbyContains applies the Contains predicate on the "updatedby" field.
func UpdatedbyContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldUpdatedby, v))
}

// UpdatedbyHasPrefix applies the HasPrefix predicate on the "updatedby" field.
func UpdatedbyHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldUpdatedby, v))
}

// UpdatedbyHasSuffix applies the HasSuffix predicate on the "updatedby" field.
func UpdatedbyHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldUpdatedby, v))
}

// UpdatedbyEqualFold applies the EqualFold predicate on the "updatedby" field.
func UpdatedbyEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldUpdatedby, v))
}

// UpdatedbyContainsFold applies the ContainsFold predicate on the "updatedby" field.
func UpdatedbyContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldUpdatedby, v))
}

// DeletedbyEQ applies the EQ predicate on the "deletedby" field.
func DeletedbyEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldDeletedby, v))
}

// DeletedbyNEQ applies the NEQ predicate on the "deletedby" field.
func DeletedbyNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldDeletedby, v))
}

// DeletedbyIn applies the In predicate on the "deletedby" field.
func DeletedbyIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldDeletedby, vs...))
}

// DeletedbyNotIn applies the NotIn predicate on the "deletedby" field.
func DeletedbyNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldDeletedby, vs...))
}

// DeletedbyGT applies the GT predicate on the "deletedby" field.
func DeletedbyGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldDeletedby, v))
}

// DeletedbyGTE applies the GTE predicate on the "deletedby" field.
func DeletedbyGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldDeletedby, v))
}

// DeletedbyLT applies the LT predicate on the "deletedby" field.
func DeletedbyLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldDeletedby, v))
}

// DeletedbyLTE applies the LTE predicate on the "deletedby" field.
func DeletedbyLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldDeletedby, v))
}

// DeletedbyContains applies the Contains predicate on the "deletedby" field.
func DeletedbyContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldDeletedby, v))
}

// DeletedbyHasPrefix applies the HasPrefix predicate on the "deletedby" field.
func DeletedbyHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldDeletedby, v))
}

// DeletedbyHasSuffix applies the HasSuffix predicate on the "deletedby" field.
func DeletedbyHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldDeletedby, v))
}

// DeletedbyIsNil applies the IsNil predicate on the "deletedby" field.
func DeletedbyIsNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIsNull(FieldDeletedby))
}

// DeletedbyNotNil applies the NotNil predicate on the "deletedby" field.
func DeletedbyNotNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotNull(FieldDeletedby))
}

// DeletedbyEqualFold applies the EqualFold predicate on the "deletedby" field.
func DeletedbyEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldDeletedby, v))
}

// DeletedbyContainsFold applies the ContainsFold predicate on the "deletedby" field.
func DeletedbyContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldDeletedby, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldCode, v))
}

// CodecreatedatEQ applies the EQ predicate on the "codecreatedat" field.
func CodecreatedatEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCodecreatedat, v))
}

// CodecreatedatNEQ applies the NEQ predicate on the "codecreatedat" field.
func CodecreatedatNEQ(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldCodecreatedat, v))
}

// CodecreatedatIn applies the In predicate on the "codecreatedat" field.
func CodecreatedatIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldCodecreatedat, vs...))
}

// CodecreatedatNotIn applies the NotIn predicate on the "codecreatedat" field.
func CodecreatedatNotIn(vs ...time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldCodecreatedat, vs...))
}

// CodecreatedatGT applies the GT predicate on the "codecreatedat" field.
func CodecreatedatGT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldCodecreatedat, v))
}

// CodecreatedatGTE applies the GTE predicate on the "codecreatedat" field.
func CodecreatedatGTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldCodecreatedat, v))
}

// CodecreatedatLT applies the LT predicate on the "codecreatedat" field.
func CodecreatedatLT(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldCodecreatedat, v))
}

// CodecreatedatLTE applies the LTE predicate on the "codecreatedat" field.
func CodecreatedatLTE(v time.Time) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldCodecreatedat, v))
}

// CodeexpiresinEQ applies the EQ predicate on the "codeexpiresin" field.
func CodeexpiresinEQ(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCodeexpiresin, v))
}

// CodeexpiresinNEQ applies the NEQ predicate on the "codeexpiresin" field.
func CodeexpiresinNEQ(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldCodeexpiresin, v))
}

// CodeexpiresinIn applies the In predicate on the "codeexpiresin" field.
func CodeexpiresinIn(vs ...int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldCodeexpiresin, vs...))
}

// CodeexpiresinNotIn applies the NotIn predicate on the "codeexpiresin" field.
func CodeexpiresinNotIn(vs ...int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldCodeexpiresin, vs...))
}

// CodeexpiresinGT applies the GT predicate on the "codeexpiresin" field.
func CodeexpiresinGT(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldCodeexpiresin, v))
}

// CodeexpiresinGTE applies the GTE predicate on the "codeexpiresin" field.
func CodeexpiresinGTE(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldCodeexpiresin, v))
}

// CodeexpiresinLT applies the LT predicate on the "codeexpiresin" field.
func CodeexpiresinLT(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldCodeexpiresin, v))
}

// CodeexpiresinLTE applies the LTE predicate on the "codeexpiresin" field.
func CodeexpiresinLTE(v int) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldCodeexpiresin, v))
}

// CodechallengeEQ applies the EQ predicate on the "codechallenge" field.
func CodechallengeEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldCodechallenge, v))
}

// CodechallengeNEQ applies the NEQ predicate on the "codechallenge" field.
func CodechallengeNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldCodechallenge, v))
}

// CodechallengeIn applies the In predicate on the "codechallenge" field.
func CodechallengeIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldCodechallenge, vs...))
}

// CodechallengeNotIn applies the NotIn predicate on the "codechallenge" field.
func CodechallengeNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldCodechallenge, vs...))
}

// CodechallengeGT applies the GT predicate on the "codechallenge" field.
func CodechallengeGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldCodechallenge, v))
}

// CodechallengeGTE applies the GTE predicate on the "codechallenge" field.
func CodechallengeGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldCodechallenge, v))
}

// CodechallengeLT applies the LT predicate on the "codechallenge" field.
func CodechallengeLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldCodechallenge, v))
}

// CodechallengeLTE applies the LTE predicate on the "codechallenge" field.
func CodechallengeLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldCodechallenge, v))
}

// CodechallengeContains applies the Contains predicate on the "codechallenge" field.
func CodechallengeContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldCodechallenge, v))
}

// CodechallengeHasPrefix applies the HasPrefix predicate on the "codechallenge" field.
func CodechallengeHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldCodechallenge, v))
}

// CodechallengeHasSuffix applies the HasSuffix predicate on the "codechallenge" field.
func CodechallengeHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldCodechallenge, v))
}

// CodechallengeIsNil applies the IsNil predicate on the "codechallenge" field.
func CodechallengeIsNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIsNull(FieldCodechallenge))
}

// CodechallengeNotNil applies the NotNil predicate on the "codechallenge" field.
func CodechallengeNotNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotNull(FieldCodechallenge))
}

// CodechallengeEqualFold applies the EqualFold predicate on the "codechallenge" field.
func CodechallengeEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldCodechallenge, v))
}

// CodechallengeContainsFold applies the ContainsFold predicate on the "codechallenge" field.
func CodechallengeContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldCodechallenge, v))
}

// RedirectURIEQ applies the EQ predicate on the "redirect_uri" field.
func RedirectURIEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldRedirectURI, v))
}

// RedirectURINEQ applies the NEQ predicate on the "redirect_uri" field.
func RedirectURINEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldRedirectURI, v))
}

// RedirectURIIn applies the In predicate on the "redirect_uri" field.
func RedirectURIIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldRedirectURI, vs...))
}

// RedirectURINotIn applies the NotIn predicate on the "redirect_uri" field.
func RedirectURINotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldRedirectURI, vs...))
}

// RedirectURIGT applies the GT predicate on the "redirect_uri" field.
func RedirectURIGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldRedirectURI, v))
}

// RedirectURIGTE applies the GTE predicate on the "redirect_uri" field.
func RedirectURIGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldRedirectURI, v))
}

// RedirectURILT applies the LT predicate on the "redirect_uri" field.
func RedirectURILT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldRedirectURI, v))
}

// RedirectURILTE applies the LTE predicate on the "redirect_uri" field.
func RedirectURILTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldRedirectURI, v))
}

// RedirectURIContains applies the Contains predicate on the "redirect_uri" field.
func RedirectURIContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldRedirectURI, v))
}

// RedirectURIHasPrefix applies the HasPrefix predicate on the "redirect_uri" field.
func RedirectURIHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldRedirectURI, v))
}

// RedirectURIHasSuffix applies the HasSuffix predicate on the "redirect_uri" field.
func RedirectURIHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldRedirectURI, v))
}

// RedirectURIIsNil applies the IsNil predicate on the "redirect_uri" field.
func RedirectURIIsNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIsNull(FieldRedirectURI))
}

// RedirectURINotNil applies the NotNil predicate on the "redirect_uri" field.
func RedirectURINotNil() predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotNull(FieldRedirectURI))
}

// RedirectURIEqualFold applies the EqualFold predicate on the "redirect_uri" field.
func RedirectURIEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldRedirectURI, v))
}

// RedirectURIContainsFold applies the ContainsFold predicate on the "redirect_uri" field.
func RedirectURIContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldRedirectURI, v))
}

// ScopeEQ applies the EQ predicate on the "scope" field.
func ScopeEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEQ(FieldScope, v))
}

// ScopeNEQ applies the NEQ predicate on the "scope" field.
func ScopeNEQ(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNEQ(FieldScope, v))
}

// ScopeIn applies the In predicate on the "scope" field.
func ScopeIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldIn(FieldScope, vs...))
}

// ScopeNotIn applies the NotIn predicate on the "scope" field.
func ScopeNotIn(vs ...string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldNotIn(FieldScope, vs...))
}

// ScopeGT applies the GT predicate on the "scope" field.
func ScopeGT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGT(FieldScope, v))
}

// ScopeGTE applies the GTE predicate on the "scope" field.
func ScopeGTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldGTE(FieldScope, v))
}

// ScopeLT applies the LT predicate on the "scope" field.
func ScopeLT(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLT(FieldScope, v))
}

// ScopeLTE applies the LTE predicate on the "scope" field.
func ScopeLTE(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldLTE(FieldScope, v))
}

// ScopeContains applies the Contains predicate on the "scope" field.
func ScopeContains(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContains(FieldScope, v))
}

// ScopeHasPrefix applies the HasPrefix predicate on the "scope" field.
func ScopeHasPrefix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasPrefix(FieldScope, v))
}

// ScopeHasSuffix applies the HasSuffix predicate on the "scope" field.
func ScopeHasSuffix(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldHasSuffix(FieldScope, v))
}

// ScopeEqualFold applies the EqualFold predicate on the "scope" field.
func ScopeEqualFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldEqualFold(FieldScope, v))
}

// ScopeContainsFold applies the ContainsFold predicate on the "scope" field.
func ScopeContainsFold(v string) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.FieldContainsFold(FieldScope, v))
}

// HasTokenClient applies the HasEdge predicate on the "TokenClient" edge.
func HasTokenClient() predicate.TblAuthToken {
	return predicate.TblAuthToken(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, TokenClientTable, TokenClientColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTokenClientWith applies the HasEdge predicate on the "TokenClient" edge with a given conditions (other predicates).
func HasTokenClientWith(preds ...predicate.TblAuthClient) predicate.TblAuthToken {
	return predicate.TblAuthToken(func(s *sql.Selector) {
		step := newTokenClientStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasTokenUser applies the HasEdge predicate on the "TokenUser" edge.
func HasTokenUser() predicate.TblAuthToken {
	return predicate.TblAuthToken(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, TokenUserTable, TokenUserColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTokenUserWith applies the HasEdge predicate on the "TokenUser" edge with a given conditions (other predicates).
func HasTokenUserWith(preds ...predicate.TblUser) predicate.TblAuthToken {
	return predicate.TblAuthToken(func(s *sql.Selector) {
		step := newTokenUserStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.TblAuthToken) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.TblAuthToken) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.TblAuthToken) predicate.TblAuthToken {
	return predicate.TblAuthToken(sql.NotPredicates(p))
}
